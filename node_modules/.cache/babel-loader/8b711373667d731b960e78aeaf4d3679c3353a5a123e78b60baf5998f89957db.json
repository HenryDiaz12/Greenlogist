{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'RegisterView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const fullName = ref('');\n    const email = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const errorMessage = ref('');\n    const router = useRouter();\n    const handleRegister = () => {\n      errorMessage.value = ''; // Reset error message\n\n      // Validaciones básicas\n      if (!fullName.value || !email.value || !password.value || !confirmPassword.value) {\n        errorMessage.value = 'Todos los campos son obligatorios.';\n        return;\n      }\n      if (password.value !== confirmPassword.value) {\n        errorMessage.value = 'Las contraseñas no coinciden.';\n        return;\n      }\n      // Validación de email \n      if (!/\\S+@\\S+\\.\\S+/.test(email.value)) {\n        errorMessage.value = 'El formato del correo electrónico no es válido.';\n        return;\n      }\n\n      // Simulación de base de datos con localStorage\n      let users = JSON.parse(localStorage.getItem('users')) || [];\n      if (users.find(user => user.email === email.value)) {\n        errorMessage.value = 'Este correo electrónico ya está registrado.';\n        return;\n      }\n\n      // Para esta simulación, la guardamos tal cual para el login.\n      users.push({\n        fullName: fullName.value,\n        email: email.value,\n        password: password.value // SIMULACIÓN\n      });\n      localStorage.setItem('users', JSON.stringify(users));\n      alert('¡Registro exitoso! Ahora puedes iniciar sesión.');\n      router.push('/login'); // Redirigir a la página de inicio de sesión\n    };\n    const __returned__ = {\n      fullName,\n      email,\n      password,\n      confirmPassword,\n      errorMessage,\n      router,\n      handleRegister,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","fullName","email","password","confirmPassword","errorMessage","router","handleRegister","value","test","users","JSON","parse","localStorage","getItem","find","user","push","setItem","stringify","alert"],"sources":["C:/Users/USUARIO/RiderProjects/GreenlogistApps/src/views/RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-form-container\">\r\n    <h1>Crear Cuenta</h1>\r\n    <form @submit.prevent=\"handleRegister\">\r\n      <div class=\"form-group\">\r\n        <label for=\"fullName\">Nombre completo</label>\r\n        <input type=\"text\" id=\"fullName\" v-model=\"fullName\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Correo electrónico</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"email\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Contraseña</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">Confirmar contraseña</label>\r\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required />\r\n      </div>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n      <button type=\"submit\" class=\"btn-submit\">Registrarse</button>\r\n    </form>\r\n    <div class=\"auth-link\">\r\n      ¿Ya tienes cuenta? <router-link to=\"/login\">Inicia sesión</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst fullName = ref('');\r\nconst email = ref('');\r\nconst password = ref('');\r\nconst confirmPassword = ref('');\r\nconst errorMessage = ref('');\r\n\r\nconst router = useRouter();\r\n\r\nconst handleRegister = () => {\r\n  errorMessage.value = ''; // Reset error message\r\n\r\n  // Validaciones básicas\r\n  if (!fullName.value || !email.value || !password.value || !confirmPassword.value) {\r\n    errorMessage.value = 'Todos los campos son obligatorios.';\r\n    return;\r\n  }\r\n  if (password.value !== confirmPassword.value) {\r\n    errorMessage.value = 'Las contraseñas no coinciden.';\r\n    return;\r\n  }\r\n  // Validación de email \r\n  if (!/\\S+@\\S+\\.\\S+/.test(email.value)) {\r\n    errorMessage.value = 'El formato del correo electrónico no es válido.';\r\n    return;\r\n  }\r\n\r\n  // Simulación de base de datos con localStorage\r\n  let users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n  if (users.find(user => user.email === email.value)) {\r\n    errorMessage.value = 'Este correo electrónico ya está registrado.';\r\n    return;\r\n  }\r\n  \r\n  // Para esta simulación, la guardamos tal cual para el login.\r\n  users.push({\r\n    fullName: fullName.value,\r\n    email: email.value,\r\n    password: password.value, // SIMULACIÓN\r\n  });\r\n\r\n  localStorage.setItem('users', JSON.stringify(users));\r\n\r\n  alert('¡Registro exitoso! Ahora puedes iniciar sesión.');\r\n  router.push('/login'); // Redirigir a la página de inicio de sesión\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;;AA8BA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,QAAQ,GAAGF,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMG,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,eAAe,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMM,YAAY,GAAGN,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;IAE1B,MAAMO,cAAc,GAAGA,CAAA,KAAM;MAC3BF,YAAY,CAACG,KAAK,GAAG,EAAE,CAAC,CAAC;;MAEzB;MACA,IAAI,CAACP,QAAQ,CAACO,KAAK,IAAI,CAACN,KAAK,CAACM,KAAK,IAAI,CAACL,QAAQ,CAACK,KAAK,IAAI,CAACJ,eAAe,CAACI,KAAK,EAAE;QAChFH,YAAY,CAACG,KAAK,GAAG,oCAAoC;QACzD;MACF;MACA,IAAIL,QAAQ,CAACK,KAAK,KAAKJ,eAAe,CAACI,KAAK,EAAE;QAC5CH,YAAY,CAACG,KAAK,GAAG,+BAA+B;QACpD;MACF;MACA;MACA,IAAI,CAAC,cAAc,CAACC,IAAI,CAACP,KAAK,CAACM,KAAK,CAAC,EAAE;QACrCH,YAAY,CAACG,KAAK,GAAG,iDAAiD;QACtE;MACF;;MAEA;MACA,IAAIE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAE3D,IAAIJ,KAAK,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACd,KAAK,KAAKA,KAAK,CAACM,KAAK,CAAC,EAAE;QAClDH,YAAY,CAACG,KAAK,GAAG,6CAA6C;QAClE;MACF;;MAEA;MACAE,KAAK,CAACO,IAAI,CAAC;QACThB,QAAQ,EAAEA,QAAQ,CAACO,KAAK;QACxBN,KAAK,EAAEA,KAAK,CAACM,KAAK;QAClBL,QAAQ,EAAEA,QAAQ,CAACK,KAAK,CAAE;MAC5B,CAAC,CAAC;MAEFK,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,SAAS,CAACT,KAAK,CAAC,CAAC;MAEpDU,KAAK,CAAC,iDAAiD,CAAC;MACxDd,MAAM,CAACW,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}